[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "graphem-jax"
version = "0.2.0"
description = "A graph embedding library based on JAX"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Alexander Kolpakov", email = "akolpakov@uaustin.org"},
    {name = "Igor Rivin", email = "rivin@temple.edu"}
]
maintainers = [
    {name = "Alexander Kolpakov", email = "akolpakov@uaustin.org"}
]
keywords = [
    "graph embedding",
    "node influence",
    "centrality measures",
    "network analysis",
    "force layout",
    "JAX"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
requires-python = ">=3.8"
dependencies = [
    "jax>=0.3.0",
    "jaxlib>=0.3.0",
    "numpy>=1.21.0",
    "matplotlib>=3.5.0",
    "networkx>=2.6.0",
    "pandas>=1.3.0",
    "plotly>=5.5.0",
    "scipy>=1.7.0",
    "ndlib>=5.1.0",
    "loguru>=0.6.0",
    "requests>=2.25.0",
    "line_profiler>=4.0.0",
    "snakeviz>=2.2.0",
    "tensorboard>=2.10.0",
    "tqdm>=4.66.0",
    "pyinstrument>=5.0.0",
    "tabulate>=0.9.0"
]

[project.optional-dependencies]
docs = [
    "sphinx>=4.0.0",
    "sphinx_rtd_theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.12.0"
]
test = [
    "pytest>=6.0.0"
]

[project.urls]
Homepage = "https://github.com/sashakolpakov/graphem"
Documentation = "https://sashakolpakov.github.io/graphem/"
Repository = "https://github.com/sashakolpakov/graphem"
"Bug Reports" = "https://github.com/sashakolpakov/graphem/issues"
Paper = "https://arxiv.org/abs/2506.07435"

[tool.setuptools]
packages = {find = {exclude = ["data*", "build*"]}}